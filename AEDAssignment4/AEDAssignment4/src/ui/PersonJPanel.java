/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.House;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author adepu
 */
public class PersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonJPanel
     */
    PersonDirectory personDirectory;
    DefaultTableModel dtml;
    int row1, column;
    public PersonJPanel(PersonDirectory personDirectory) {
        initComponents();
        dtml = (DefaultTableModel) tblPerson.getModel();
        this.personDirectory = personDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnGroupSex = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CommunityBox = new javax.swing.JComboBox<>();
        txtpersonname = new javax.swing.JTextField();
        radioButtonMale = new javax.swing.JRadioButton();
        txtpersonid = new javax.swing.JTextField();
        radioButtonFemale = new javax.swing.JRadioButton();
        txtAge = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtphoneno = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txthouseid = new javax.swing.JTextField();
        txtstate = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        rbtnyes = new javax.swing.JRadioButton();
        rbtnno = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnViewData = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 255));

        jLabel4.setText("Age");

        jLabel5.setText("Gender:");

        jLabel6.setText("Community Name");

        jLabel7.setText("House No:");

        jLabel8.setText("City");

        jLabel2.setText("Person ID");

        jLabel3.setText("Person Name");

        CommunityBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Roxbury", "Jamaica Plain", "Germain", "Rhode Island" }));

        btnGroupSex.add(radioButtonMale);
        radioButtonMale.setText("Male");

        btnGroupSex.add(radioButtonFemale);
        radioButtonFemale.setText("Female");

        jLabel9.setText("Phone No:");

        txtphoneno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphonenoActionPerformed(evt);
            }
        });

        jLabel10.setText("State:");

        btnsave.setBackground(new java.awt.Color(153, 153, 255));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Person Directory");

        jLabel11.setText("Is Patient:");

        buttonGroup1.add(rbtnyes);
        rbtnyes.setText("YES");
        rbtnyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnyesActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnno);
        rbtnno.setText("NO");

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Age", "Gender", "City", "House Number", "State", "Phone No", "Is Patient?", "Community", "ZipCode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPerson.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPerson);

        jLabel12.setText("Zip code");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnViewData.setText("View Data");
        btnViewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDataActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel3))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel7))
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(153, 153, 153))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(145, 145, 145))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(132, 132, 132)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CommunityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(radioButtonMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addComponent(radioButtonFemale))
                            .addComponent(txtcity)
                            .addComponent(txthouseid)
                            .addComponent(txtAge)
                            .addComponent(txtpersonid)
                            .addComponent(txtpersonname)
                            .addComponent(txtphoneno)
                            .addComponent(txtstate)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbtnyes)
                                .addGap(36, 36, 36)
                                .addComponent(rbtnno))
                            .addComponent(txtZipCode)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(btnsave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnViewData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtpersonname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtpersonid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CommunityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioButtonFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(radioButtonMale)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txthouseid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtphoneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(rbtnyes)
                    .addComponent(rbtnno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btnUpdate)
                    .addComponent(btnViewData)
                    .addComponent(btnDelete))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name = txtpersonname.getText();
        String ID = txtpersonid.getText();
        String age = txtAge.getText();
        String comm = CommunityBox.getSelectedItem().toString();
        String gender = getGender();
        String City = txtcity.getText();
        String HNumber = txthouseid.getText();
        String state = txtstate.getText();
        String pNo = txtphoneno.getText();
        String isPatient = getIsPatient();
        String zipCode = txtZipCode.getText();
        
        if(name.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Name!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        if(ID.equals("")){
            JOptionPane.showMessageDialog(null, "Enter ID!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(ID);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid ID!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(age.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Age!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        try{
            Integer.parseInt(age);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid Age!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(comm.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Community!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(gender.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Gender!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(City.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid City!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(state.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid state!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(HNumber.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid HouseNumber!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(HNumber);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid HouseNumber!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        if(pNo.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Phone Number!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(pNo);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid phone number!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(isPatient.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid patient!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(zipCode.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Zip Code!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(zipCode);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid Zip Code!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        for(Person person: personDirectory.getPersonDirectory()){
           if (person.getID()== Integer.parseInt(txtpersonid.getText())) {
              JOptionPane.showMessageDialog(null,"Please enter unique ID", " Warning", JOptionPane.WARNING_MESSAGE); 
              return;
        }
           
        }
        
        int id = Integer.parseInt(ID);
        int Age = Integer.parseInt(age);
        int hNo = Integer.parseInt(HNumber);
        int phoneNumber = Integer.parseInt(pNo);
        
        City city =  new City(City);
        Community community = new Community(comm, city);
        House houseName = new House(phoneNumber, state, id, community, city);
        Person person = new Person(id, name, Age, gender, phoneNumber,getIsPatient(),houseName);
        personDirectory.addPerson(person);
        
        loadData(personDirectory.getPersonDirectory());
        data_clear();
        
    }//GEN-LAST:event_btnsaveActionPerformed

    private void rbtnyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnyesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnyesActionPerformed

    private void txtphonenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphonenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphonenoActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String updateName = txtpersonname.getText();
        String updateID = txtpersonid.getText();
        String updateAge = txtAge.getText();
        String updateComm = CommunityBox.getSelectedItem().toString();
        String updateGender = getGender();
        String updateCity = txtcity.getText();
        String updateHNumber = txthouseid.getText();
        String updateState = txtstate.getText();
        String updatePNo = txtphoneno.getText();
        String updateisPatient = getIsPatient();
        String updateZipCode = txtZipCode.getText();
        
        if(updateName.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Name!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        if(updateID.equals("")){
            JOptionPane.showMessageDialog(null, "Enter ID!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(updateID);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid ID!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(updateAge.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Age!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        try{
            Integer.parseInt(updateAge);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid Age!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateComm.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Community!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateGender.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Gender!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateCity.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid City!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateState.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid state!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateHNumber.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid HouseNumber!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(updateHNumber);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid HouseNumber!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        if(updatePNo.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Phone Number!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(updatePNo);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid phone number!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(updateisPatient.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid patient!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(updateZipCode.equals("")){
            JOptionPane.showMessageDialog(null, "Enter Valid Zip Code!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            Integer.parseInt(updateZipCode);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Enter Valid Zip Code!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        row1 = tblPerson.getSelectedRow();
        if(!((dtml.getValueAt(row1,0).toString().equals(txtpersonid.getText())))){
        for(Person person: personDirectory.getPersonDirectory()){
           if (person.getID()== Integer.parseInt(txtpersonid.getText())) {
              JOptionPane.showMessageDialog(null,"Please enter unique ID", " Warning", JOptionPane.WARNING_MESSAGE); 
              return;
        }
        }
        }
        
        int id = Integer.parseInt(updateID);
        int Age = Integer.parseInt(updateAge);
        int hNo = Integer.parseInt(updateHNumber);
        int phoneNumber = Integer.parseInt(updatePNo);
        int zip = Integer.parseInt(updateZipCode);
         City cityName = new City(updateCity);
        Community communityName  = new Community(updateComm, cityName);
        House houseName = new House(phoneNumber, updateState, zip, communityName, cityName);
            personDirectory.getPersonDirectory().get(row1).setPersonName(updateName);
            personDirectory.getPersonDirectory().get(row1).setID(id);
            personDirectory.getPersonDirectory().get(row1).setAge(Age);
            personDirectory.getPersonDirectory().get(row1).setGender(updateGender);
            personDirectory.getPersonDirectory().get(row1).setHouse(houseName);
            personDirectory.getPersonDirectory().get(row1).setIsPatient(updateisPatient);
        loadData(personDirectory.getPersonDirectory());
        JOptionPane.showMessageDialog(this, "Patient Information Updated.");
        data_clear();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDataActionPerformed
        // TODO add your handling code here:
        row1 = tblPerson.getSelectedRow();
        if(row1<0){
            JOptionPane.showMessageDialog(this, "Please Select a row to view.");
            return;
        }
        
        txtpersonname.setText(dtml.getValueAt(row1,0).toString());
        txtpersonid.setText(dtml.getValueAt(row1,1).toString());
        txtAge.setText(dtml.getValueAt(row1,2).toString());
        txtcity.setText(dtml.getValueAt(row1,4).toString());
        txthouseid.setText(dtml.getValueAt(row1,5).toString());
        txtstate.setText(dtml.getValueAt(row1,6).toString());
        txtphoneno.setText(dtml.getValueAt(row1, 7).toString());
        CommunityBox.setSelectedItem(dtml.getValueAt(row1, 9).toString());
        txtZipCode.setText(dtml.getValueAt(row1,10).toString());
        
        if (dtml.getValueAt(row1, 3).toString().equals("Male"))
        {
            radioButtonMale.doClick();
        }
        if (dtml.getValueAt(row1, 3).toString().equals("Female"))
        {
            radioButtonFemale.doClick();
        }
        if (dtml.getValueAt(row1, 8).toString().equals("Yes"))
        {
            rbtnyes.doClick();
        }
        if (dtml.getValueAt(row1, 8).toString().equals("No"))
        {
            rbtnno.doClick();
        }
        
    }//GEN-LAST:event_btnViewDataActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int dButton = JOptionPane.YES_NO_OPTION;
        int dResult = JOptionPane.showConfirmDialog(this, "Delete this data", "Delete", dButton);
        if (dButton == 0)
        {
            row1 = tblPerson.getSelectedRow();
            dtml.removeRow(row1);
            personDirectory.getPersonDirectory().remove(row1);
            dtml.setRowCount(0);
            loadData(personDirectory.getPersonDirectory());
            data_clear();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    public String getGender(){
        if(radioButtonMale.isSelected()) return "Male";
        if(radioButtonFemale.isSelected()) return "Female";
        return "";
    }
    
    public String getIsPatient(){
        if(rbtnyes.isSelected()) return "Yes";
        if(rbtnno.isSelected()) return "No";
        return "";
    }

    public void loadData(List<Person> persons){
    dtml.setRowCount(0);
dtml.setRowCount(0);
        for(Person person : persons){
            
            House house = person.getHouse();
            Community community = house.getCommunityName();
            Object[] objs = {person.getPersonName(), person.getID(),person.getAge(), 
                person.getGender(), community.getCityName().getCity() ,house.getHouseNumber(),house.getStateName(),person.getPhoneNumber(), person.getIsPatient(), house.getCommunityName().getCommunityName(), house.getZipCode()};
            dtml.addRow(objs);
        }
        
        
    
}
    
    public void data_clear(){
            txtpersonname.setText("");
            txtpersonid.setText("");
            txtAge.setText("");
            btnGroupSex.clearSelection();
            txtcity.setText("");
            txthouseid.setText("");
            txtstate.setText("");
            txtphoneno.setText("");
            buttonGroup1.clearSelection();
            txtZipCode.setText("");
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CommunityBox;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGroupSex;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnViewData;
    private javax.swing.JButton btnsave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioButtonFemale;
    private javax.swing.JRadioButton radioButtonMale;
    private javax.swing.JRadioButton rbtnno;
    private javax.swing.JRadioButton rbtnyes;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txthouseid;
    private javax.swing.JTextField txtpersonid;
    private javax.swing.JTextField txtpersonname;
    private javax.swing.JTextField txtphoneno;
    private javax.swing.JTextField txtstate;
    // End of variables declaration//GEN-END:variables
}

